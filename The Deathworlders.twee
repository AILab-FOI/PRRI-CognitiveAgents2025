:: StoryTitle
The Deathworlders


:: StoryData
{
  "ifid": "7AA88246-E759-4671-8415-13C23FFA31FC",
  "format": "Harlowe",
  "format-version": "3.3.9",
  "start": "Start",
  "tag-colors": {
    "Start": "red"
  },
  "zoom": 1
}


:: \ Federacija1 {"position":"1225,550","size":"100,100"}
<tw-passage data-passage="Federacija1" class="federacija1-bg">

<audio loop id="newEuropeTheme" >
    <source src="https://raw.githubusercontent.com/AILab-FOI/PRRI-CognitiveAgents2025/main/src/static/media/New_Europe_Theme.mp3" type="audio/mp3">
    Your browser does not support the audio element.
  </audio>

  <p id="typingFederation1"></p>
  [[<button id="btnNextPassage">➤</button> ->Federacija2]]
</tw-passage>


:: \ Intro2 {"position":"1550,225","size":"100,100"}
<tw-passage data-passage="Intro2" class="intro2-bg">

<div id="agent-container"></div>

<script>
class UnifiedPassageHandler {
    constructor(passageToSend = "010101") {
        this.passageToSend = passageToSend;
        this.ws = null;
        this.connectWebSocket();
    }

    connectWebSocket() {
        this.ws = new WebSocket('ws://localhost:8009');

        this.ws.onopen = () => {
            console.log("WebSocket veza uspostavljena");
            this.sendPassageName();
        };

        this.ws.onmessage = (event) => {
            if (event.data.startsWith('DO_TRANSITION:')) {
                const passage = event.data.split(':')[1];
                this.transitionToPassage(passage);
            }
        };

        this.ws.onerror = (error) => {
            console.error("WebSocket greška:", error);
            setTimeout(() => this.connectWebSocket(), 1000);
        };
    }

    sendPassageName() {
        if (this.ws.readyState === WebSocket.OPEN) {
            console.log("Šaljem naziv passaga:", this.passageToSend);
            setTimeout(() => {
              this.ws.send(`PASSAGE:${this.passageToSend}`);
            }, 1000);
        } else {
            console.log("WebSocket nije spreman, status:", this.ws.readyState);
            setTimeout(() => this.sendPassageName(), 1500);
        }
    }

    transitionToPassage(passageName) {
        console.log(`Transitioning to passage: ${passageName}`);

        const nextButton = document.getElementById('btnNextPassage');
        if (nextButton) {
			this.ws.close()
            nextButton.click();
        } else {
            console.warn("Fallback: btnNextPassage not found.");
        }
    }
}

// Inicijalizacija WebSocketa i slanje odmah po učitavanju
new UnifiedPassageHandler("010101");

// Učitaj iframe agenta
const agentContainer = document.getElementById('agent-container');
if (agentContainer) {
    const iframe = document.createElement('iframe');
    iframe.width = '500px';
    iframe.height = '500px';
    iframe.src = '/agenti';
    agentContainer.appendChild(iframe);
}
</script>

<div class="options" id="op3">
Who are you?
Where are you from?
Why come here?
</div>

[[<button id="btnNextPassage">➤</button> -> Intro3]]

</tw-passage>



:: \ Intro3 {"position":"1775,350","size":"100,100"}
<tw-passage data-passage="Intro3" class="intro2-bg">

<div id="agent-container"></div>

<script>
class UnifiedPassageHandler {
    constructor(passageToSend = "010102") {
        this.passageToSend = passageToSend;
        this.ws = null;
        this.connectWebSocket();
    }

    connectWebSocket() {
        this.ws = new WebSocket('ws://localhost:8009');

        this.ws.onopen = () => {
            console.log("WebSocket veza uspostavljena");
            this.sendPassageName();
        };

        this.ws.onmessage = (event) => {
            if (event.data.startsWith('DO_TRANSITION:')) {
                const passage = event.data.split(':')[1];
                this.transitionToPassage(passage);
            }
        };

        this.ws.onerror = (error) => {
            console.error("WebSocket greška:", error);
            setTimeout(() => this.connectWebSocket(), 1000);
        };
    }

    sendPassageName() {
        if (this.ws.readyState === WebSocket.OPEN) {
            console.log("Šaljem naziv passaga:", this.passageToSend);
            setTimeout(() => {
              this.ws.send(`PASSAGE:${this.passageToSend}`);
            }, 1000);
        } else {
            console.log("WebSocket nije spreman, status:", this.ws.readyState);
            setTimeout(() => this.sendPassageName(), 500);
        }
    }

    transitionToPassage(passageName) {
        console.log(`Transitioning to passage: ${passageName}`);

        const nextButton = document.getElementById('btnNextPassage');
        if (nextButton) {
        	this.ws.close()
            nextButton.click();
        } else {
            console.warn("Fallback: btnNextPassage not found.");
        }
    }
}

// Inicijalizacija WebSocketa i slanje odmah po učitavanju
new UnifiedPassageHandler("010102");

// Učitaj iframe agenta
const agentContainer = document.getElementById('agent-container');
if (agentContainer) {
    const iframe = document.createElement('iframe');
    iframe.width = '500px';
    iframe.height = '500px';
    iframe.src = '/agenti';
    agentContainer.appendChild(iframe);
}
</script>

<div class="options" id="op2">
Let's work together.
We are suspicious of you.
</div>

[[<button id="btnNextPassage">➤</button> -> Intro4]]
</tw-passage>



:: \ Intro4 {"position":"1950,200","size":"100,100"}
<tw-passage data-passage="Intro3" class="intro2-bg">


<div id="agent-container"></div>

<script>
function addAgent(name) {
    const iframe = document.createElement('iframe');
    iframe.width = '500px';
    iframe.height = '500px';
    iframe.src = `/${name}`;
    return iframe;
}

document.getElementById('agent-container').appendChild( addAgent( 'agenti' ) );
</script>


<div class="options" id="op4">
Who are you?
Where are you from?
Why come here?
Are you friendly?
</div>

 [[<button id="btnNextPassage">➤</button> -> Intro4]]


</tw-passage>


:: \ IntroA {"position":"1100,225","size":"100,100"}
<tw-passage data-passage="IntroA" class="introA-bg">
<audio autoplay>
	<source src="https://raw.githubusercontent.com/AILab-FOI/PRRI-CognitiveAgents2025/main/src/static/media/Intro2Naration.mp3
" type="audio/mp3">
Vaš preglednik ne podržava HTML5 audio element.
</audio>

<audio loop autoplay id="soundEarth">
<source src="https://raw.githubusercontent.com/AILab-FOI/PRRI-CognitiveAgents2025/main/src/static/media/Intro2CitySounds.mp3" type="audio/mp3">
</audio>
  <p id="typingIntro2"></p>
    [[<button id="btnNextPassage">➤</button> -> IntroB]]
</tw-passage>


:: \ IntroB {"position":"1300,225","size":"100,100"}
<tw-passage data-passage="IntroB" class="introB-bg">
<audio autoplay>
	<source src="https://raw.githubusercontent.com/AILab-FOI/PRRI-CognitiveAgents2025/main/src/static/media/Intro3.mp3
" type="audio/mp3">
Vaš preglednik ne podržava HTML5 audio element.
</audio>

<audio loop autoplay id="soundCorti">
<source src="https://raw.githubusercontent.com/AILab-FOI/PRRI-CognitiveAgents2025/main/src/static/media/Intro3CortiShip.mp3" type="audio/mp3">
</audio>
  <p id="typingIntro3"></p>
  [[<button id="btnNextPassage">➤</button> -> Federacija1]]
</tw-passage>


:: \ Odabir1 {"position":"1550,425","size":"100,100"}
<tw-passage data-passage="federacija3" class="federacija1-bg">

<audio loop id="newEuropeTheme" >
    <source src="https://raw.githubusercontent.com/AILab-FOI/PRRI-CognitiveAgents2025/main/src/static/media/New_Europe_Theme.mp3" type="audio/mp3">
    Your browser does not support the audio element.
  </audio>

  <p id="typingFederation2"></p>
  [[<button id="btnNextPassage">➤</button> -> Intro2]]
</tw-passage>


:: \ Odabir2 {"position":"1650,550","size":"100,100"}
<tw-passage data-passage="federacija4" class="federacija1-bg">

<audio loop id="newEuropeTheme" >
    <source src="https://raw.githubusercontent.com/AILab-FOI/PRRI-CognitiveAgents2025/main/src/static/media/New_Europe_Theme.mp3" type="audio/mp3">
    Your browser does not support the audio element.
  </audio>

  <p id="typingFederation3"></p>
  [[<button id="btnNextPassage">➤</button> -> Intro2]]
</tw-passage>


:: \ Odabir3 {"position":"1550,700","size":"100,100"}
<tw-passage data-passage="federacija4" class="federacija1-bg">

<audio loop id="newEuropeTheme" >
    <source src="https://raw.githubusercontent.com/AILab-FOI/PRRI-CognitiveAgents2025/main/src/static/media/New_Europe_Theme.mp3" type="audio/mp3">
    Your browser does not support the audio element.
  </audio>

  <p id="typingFederation4"></p>
  [[<button id="btnNextPassage">➤</button> -> Intro2]]
</tw-passage>


:: Federacija2 {"position":"1400,550","size":"100,100"}
<tw-passage data-passage="federacija2" class="federacija1-bg">

  [[<button class="gumbiOdabir1" id="prviOdabir">(Skeptical) “I don’t trust their intentions. They’re hiding too much.”</button> -> Odabir1]]
  [[<button class="gumbiOdabir1">(Neutral) “They haven’t shown hostility, but they’re not being fully open either. We need to be cautious.”</button> -> Odabir2]]
  [[<button class="gumbiOdabir1">(Optimistic) “Maybe they genuinely don’t seek domination. They could be allies.”</button> -> Odabir3]]
</tw-passage>


:: Intro1 {"position":"925,225","size":"100,100"}
<tw-passage data-passage="Intro1" class="intro-bg">
<audio autoplay>
	<source src="https://raw.githubusercontent.com/AILab-FOI/PRRI-CognitiveAgents2025/main/src/static/media/IntroNaration.mp3
" type="audio/mp3">
Vaš preglednik ne podržava HTML5 audio element.
</audio>

<audio loop autoplay id="soundEarth">
<source src="https://raw.githubusercontent.com/AILab-FOI/PRRI-CognitiveAgents2025/main/src/static/media/IntroSoundOfEarth.mp3
" type="audio/mp3">
</audio>
  <p id="typing"></p>
  [[<button id="btnNextPassage">➤</button> -> IntroA]]


</tw-passage>


:: Intro3 {"position":"1725,200","size":"100,100"}
<tw-passage data-passage="Intro3" class="intro2-bg">

<div id="agent-container"></div>

<script>
// Poboljšana verzija vašeg koda
function sendPassageName() {
    try {
        // Provjeri da li postoji WebSocket objekt
        if (!window.ws) {
            console.log("WebSocket objekt ne postoji");
            initializeWebSocket();
            return;
        }
        
        // Provjeri status veze
        if (window.ws.readyState === WebSocket.OPEN) {
            console.log("Šaljem naziv passaga: Intro2");
            window.ws.send("Intro2");
        } else {
            console.log("WebSocket nije spreman, status:", window.ws.readyState);
            setTimeout(sendPassageName, 500);
        }
    } catch (e) {
        console.error("Greška pri slanju:", e);
    }
}

// Funkcija za inicijalizaciju WebSocketa ako već nije inicijaliziran
function initializeWebSocket() {
    if (!window.ws && window.WebSocket) {
        try {
            window.ws = new WebSocket('ws://localhost:8009');
            
            window.ws.onopen = function() {
                console.log("WebSocket veza uspostavljena");
                sendPassageName(); // Pokušaj ponovno poslati
            };
            
            window.ws.onerror = function(error) {
                console.error("WebSocket greška:", error);
            };
        } catch (e) {
            console.error("Greška pri inicijalizaciji WebSocketa:", e);
        }
    }
}

// Funkcija za dodavanje agenta (ostaje ista kao u vašem kodu)
function addAgent(name) {
    const container = document.getElementById('agent-container');
    if (!container) {
        console.error("Agent container nije pronađen!");
        return;
    }
    
    const iframe = document.createElement('iframe');
    iframe.width = '500px';
    iframe.height = '500px';
    iframe.src = `/${name}`;
    container.appendChild(iframe);
    console.log("Agent iframe dodan");
}

// Glavna inicijalizacija
(function init() {
    console.log("Inicijalizacija passaga Intro2");
    
    // 1. Dodaj agenta
    addAgent('agenti');
    
    // 2. Inicijaliziraj WebSocket ako već nije
    initializeWebSocket();
    
    // 3. Pokušaj poslati naziv passaga
    sendPassageName();
    
    // 4. Postavi intervalnu provjeru kao backup
    const backupCheck = setInterval(() => {
        if (window.ws && window.ws.readyState === WebSocket.OPEN) {
            console.log("Backup provjera - šaljem Intro2");
            window.ws.send("Intro2");
            clearInterval(backupCheck);
        }
    }, 3000);
})();
</script>

<div class="options" id="op2">
Let's work together.
We are suspicious of you.
</div>

[[<button id="btnNextPassage">➤</button> -> Intro4]]
</tw-passage>



:: Start [Start] {"position":"675,425","size":"100,100"}
<tw-passage data-passage="Start" class="start-bg">
[
  <h1>Edge of Extinction</h1>
  <div>
    [[<button id="btnNewGame">NEW GAME</button> ->Intro1]]
    [[<button id="btnOptions">OPTIONS</button> ->b]]
    [[<button id="btnExit">EXIT</button> ->c]]
     <button id="btnSound">🔇</button>
  </div>
  

  <audio loop id="mainTheme" >
    <source src="https://raw.githubusercontent.com/AILab-FOI/PRRI-CognitiveAgents2025/main/src/static/media/Main_Theme.mp3" type="audio/mp3">
    Your browser does not support the audio element.
  </audio>
]
</tw-passage>


:: b {"position":"1000,475","size":"100,100"}
Opcije


:: c {"position":"900,750","size":"100,100"}
exit skripta


:: StoryScript [script]
function typeWriter(elementId, text, speed, callback) {
  let i = 0;
  let element = document.getElementById(elementId);

  if (!element) {
    console.error(`Element s ID-jem "${elementId}" nije pronađen.`);
    return; 
  }

  element.innerHTML = "";

  function writeText() {
    if (i < text.length) {
      element.innerHTML += text.charAt(i);
      i++;
      setTimeout(writeText, speed);
    } else if (callback) {
      callback();
    }
  }

  writeText();
}

const mainObserver = new MutationObserver((mutationsList, observer) => {
 
  const soundEarth = document.getElementById("soundEarth");
  if (soundEarth) {
    soundEarth.volume = 0.1; 
  }

  const button = document.querySelector("button");
  const buttonSelect = new Audio("https://raw.githubusercontent.com/AILab-FOI/PRRI-CognitiveAgents2025/main/src/static/media/buttonSelect.wav");
  
   if (button && button.id != "btnSound" && !button.dataset.listenerAttached) { 
     button.addEventListener("click", () => {
       const clickAudio = buttonSelect.cloneNode(true);
       clickAudio.volume = 0.3;
       clickAudio.play();
     });
     button.dataset.listenerAttached = "true";
   }


  const btnSound = document.getElementById("btnSound");
  const mainTheme = document.getElementById("mainTheme");
  if (btnSound && mainTheme) {
    btnSound.addEventListener("click", function () {
      mainTheme.play();
      this.disabled = true;
      this.innerText = "🔊";
    });
    mainTheme.volume = 0.85; 
  }

  const typingElement = document.getElementById("typing");
  if (typingElement && !typingElement.dataset.typed) {
    typeWriter("typing", "The year is 2367. The twenty-fourth century has brought humanity technological advancements once thought impossible. We colonized the Moon. Built orbital cities. Established artificial ecosystems in space.Yet on Earth… the same problems remain.", 70);
    typingElement.dataset.typed = "true";
  }

  const typingIntro2Element = document.getElementById("typingIntro2");
  if (typingIntro2Element && !typingIntro2Element.dataset.typed) {
    const firstText = "The old nations no longer exist. After centuries of wars, economic collapses, and climate disasters, humanity is now united under a single government - the Global Federation. But true unity remains a distant dream.";
    const secondText = "The Federation controls global politics, but not the hearts of its people. While the elite rule from their glass towers, resistance movements grow in the shadows. The world may have changed… but power still belongs to those who know how to wield it. In the heart of this new world stands 'New Europe' – a city of glass and steel, a symbol of progress and control.";
    
    typeWriter("typingIntro2", firstText, 70, () => {
      setTimeout(() => {
        typeWriter("typingIntro2", secondText, 70);
      }, 1000);
    });
    typingIntro2Element.dataset.typed = "true";
  }

  const typingIntro3Element = document.getElementById("typingIntro3");
  if(typingIntro3Element && !typingIntro3Element.dataset.typed) {
    const soundSpaceship = document.getElementById("soundCorti");
    if (soundSpaceship) {
      soundSpaceship.volume = 0.3;
    }
    
    const firstText = "The Corti. Beings from the planet Mentis. Fragile, yet brilliant. Their technology far surpasses our own. They came in peace… or so they claim.";
    const secondText = "To some, they are the key to survival. To others, potential conquerors.";
    
    typeWriter("typingIntro3", firstText, 70, () => {
      setTimeout(() => {
        typeWriter("typingIntro3", secondText, 70);
      }, 1000);
    });
    typingIntro3Element.dataset.typed = "true";
  }
  
  const typingFederation1Element = document.getElementById("typingFederation1");

  if (typingFederation1Element && !typingFederation1Element.dataset.typed) {
    const prviTekst = 'PRESIDENT HALE:\n“Three months. And we still don’t know what the Corti really want.”';
    const drugiTekst = 'GENERAL SMITH:\n“They could have attacked us, but they haven’t. That means something.”';
    const treciTekst = 'DR. JOHNSON:\n“Or they’re just waiting for the right moment.”';
    const cetvrtiTekst = 'PRESIDENT HALE:\n“What’s your take?”';

    const dialogues = [prviTekst, drugiTekst, treciTekst, cetvrtiTekst];

    const typeWriters = (elementId, index, speed) => {
      if (index >= dialogues.length) return;

      const element = document.getElementById(elementId);
      if (!element) return;

      element.innerText = ""; // Clear previous text

      typeWriter(elementId, dialogues[index], speed, () => {
        setTimeout(() => {
          typeWriters(elementId, index + 1, speed);
        }, 1500); // Pauza prije sljedećeg govornika
      });
    };

    typeWriters("typingFederation1", 0, 70);
    typingFederation1Element.dataset.typed = "true";
  }

  const typingFederation2Element = document.getElementById("typingFederation2");
  if(typingFederation2Element && !typingFederation2Element.dataset.typed) {
    const firstText = 'DR. JOHNSON: “Exactly. We have to assume the worst until they prove otherwise.”';
    const secondText = 'PRESIDENT HALE: “Even so, we need more information. We’ll arrange a meeting with them.”';
    
    typeWriter("typingFederation2", firstText, 70, () => {
      setTimeout(() => {
        typeWriter("typingFederation2", secondText, 70);
      }, 1000);
    });
    typingFederation2Element.dataset.typed = "true";
  }
  
  const typingFederation3Element = document.getElementById("typingFederation3");
  if(typingFederation3Element && !typingFederation3Element.dataset.typed) {
    const firstText = 'GENERAL SMITH: “Caution is key. We can’t push them away, but we can’t blindly trust them either.”';
    const secondText = 'PRESIDENT HALE: “Agreed. We need to monitor every move they make.”';
    
    typeWriter("typingFederation3", firstText, 70, () => {
      setTimeout(() => {
        typeWriter("typingFederation3", secondText, 70);
      }, 1000);
    });
    typingFederation3Element.dataset.typed = "true";
  }
  
  const typingFederation4Element = document.getElementById("typingFederation4");
  if(typingFederation4Element && !typingFederation4Element.dataset.typed) {
    const firstText = 'PRESIDENT HALE: “That’s possible. But we need proof, not assumptions.”';
    const secondText = 'DR. JOHNSON: “Which is why we’ll continue analyzing their technology.”';
    
    typeWriter("typingFederation4", firstText, 70, () => {
      setTimeout(() => {
        typeWriter("typingFederation4", secondText, 70);
      }, 1000);
    });
    typingFederation4Element.dataset.typed = "true";
  }  
  
   const newEuropeTheme = document.getElementById("newEuropeTheme");
    if (newEuropeTheme) {
      newEuropeTheme.volume = 0.7;

      newEuropeTheme.addEventListener("loadedmetadata", () => {
      if (typingFederation1Element) {
        newEuropeTheme.currentTime = 0;
      } else if (typingFederation2Element) {
        newEuropeTheme.currentTime = 28;
      } else if (typingFederation3Element) {
        newEuropeTheme.currentTime = 50;
      } else if (typingFederation4Element) {
        newEuropeTheme.currentTime = 70;
      }

      newEuropeTheme.play().catch(e => console.log("Greška kod pokretanja glazbe:", e));
    });
  }

});

const initialElement = document.getElementById("typing");
if (initialElement) {
  console.log("Element 'typing' je odmah dostupan.");
  typeWriter("typing", "The year is 2367. The twenty-fourth century has brought humanity technological advancements once thought impossible. We colonized the Moon. Built orbital cities. Established artificial ecosystems in space.Yet on Earth… the same problems remain.", 70);

  const soundEarth = document.getElementById("soundEarth");
  if (soundEarth) {
    soundEarth.volume = 0.1; 
  }
}

mainObserver.observe(document.body, {
  childList: true,
  subtree: true
});

:: StoryStylesheet [stylesheet]
@import url('https://fonts.googleapis.com/css2?family=Iceland&family=Montserrat:ital,wght@0,100..900;1,100..900&family=Sacramento&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Iceberg&family=Iceland&family=Montserrat:ital,wght@0,100..900;1,100..900&family=Sacramento&display=swap');

.start-bg {
  background: url("https://raw.githubusercontent.com/AILab-FOI/PRRI-CognitiveAgents2025/refs/heads/main/src/static/media/probna_slika2.jpg") 
  no-repeat center center;
  background-size: 100% 100%; 
  width: 100vw;
  height: 100vh;
  position: fixed;
  top: 0;
  left: 0;
}

.intro-bg {
  background: url("https://raw.githubusercontent.com/AILab-FOI/PRRI-CognitiveAgents2025/main/src/static/media/Flux_Dev_A_breathtaking_view_of_Earth_from_space_showcasing_ou_1.jpeg") 
  no-repeat center center;
  background-size: 100% 100%;
  width: 100vw;
  height: 100vh;
  position: fixed;
  top: 0;
  left: 0;
  display: flex;
  flex-direction: column;
  height: 100vh;
}

.intro2-bg {
  background: url("https://raw.githubusercontent.com/AILab-FOI/PRRI-CognitiveAgents2025/main/src/static/media/monitor1.1.png") no-repeat center center;
  background-size: 100% 100%; 
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  position: fixed;
}

.introA-bg {
  background: url("https://raw.githubusercontent.com/AILab-FOI/PRRI-CognitiveAgents2025/main/src/static/media/NewEurope.jpg") 
  no-repeat center center;
  background-size: 100% 100%; 
  width: 100vw;
  height: 100vh;
  position: fixed;
  top: 0;
  left: 0;
}
.introB-bg {
  background: url('https://raw.githubusercontent.com/AILab-FOI/PRRI-CognitiveAgents2025/main/src/static/media/CortiShip.jpg')
  no-repeat center center;
  background-size: 100% 100%; 
  width: 100vw;
  height: 100vh;
  position: fixed;
  top: 0;
  left: 0;
}
.federacija1-bg {
  background: url('https://raw.githubusercontent.com/AILab-FOI/PRRI-CognitiveAgents2025/main/src/static/media/roundTableFederation.jpg')
  no-repeat center center;
  background-size: 100% 100%; 
  width: 100vw;
  height: 100vh;
  position: fixed;
  top: 0;
  left: 0;
}
.gumbiOdabir1 {
  font-family: "Iceland", sans-serif;
  padding: 2%;
  background-color: rgba(0, 0, 0, 0.6);
  letter-spacing: 2px;
  display: flex;
  justify-content: center;
}


tw-passage {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  /*min-height: 100vh; zašto?*/
  margin: 0;
  padding: 0;
}

tw-story {
  margin: 0;
  padding: 0;
}

div {
  display: flex;
  flex-direction: column;
  background-color: rgba(0, 0, 0, 0.494); 
  padding: 12px;
  box-shadow: 0 0 5px rgba(0, 0, 0, 2);
  margin-top: auto;
  width: auto;  
  align-items: center;
}

button {
  font-family: "Iceland", sans-serif;
  background-color: transparent;
  border: transparent;
  color: #c0fbff;
  font-size: 1em;
  padding: 10px 60px;
  letter-spacing: 2px;
  transition: all 0.3s ease;
}

h1 {
  margin-top: 0.5em;
  font-family: "Iceberg", sans-serif;
  font-size: 3em;
  text-shadow: 2px 2px 5px #94f4fa;
  color: black;
  opacity: 1;
  animation: shadowGrow 2s ease-out;
  margin: 2em 0 2em 0;
}

@keyframes shadowGrow {
  0% {
    opacity: 0;
    text-shadow: 0 0 10px #94f3fa6b;
  }
  100% {
    opacity: 1;
    text-shadow: 2px 2px 5px #94f4fa;
  }
}

button:hover {
  color: #c3f3ef;
  transform: scale(1.1);
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.76);
  cursor: pointer;
}
p{
  font-family: "Iceland", sans-serif;
  padding: 2%;
  background-color: rgba(0, 0, 0, 0.394);
  letter-spacing: 2px;
  margin-top: auto;
  text-align: center;
  position: absolute;
  bottom: 5%;
  left: 50%;
  transform: translateX(-50%);
  width: 90%;
  text-align: center;
}
#btnSound{
  padding: 5px 10px;
  align-self: center;
}
#btnSound:hover{
  box-shadow: none;
  padding: 5px 10px;
  transform: scale(1.5);
}

#agent-container {
  width: 60%;
  height: 90%;
  position: relative;
}

#agent-container iframe {
  width: 100%;
  height: 100%;
  border: none;
  display: block;
}

.options {
  position: absolute;
  bottom: 2%;
  left: 12.5%;
  right: 12.5%;
  width: 75%;
  height: 22%;
  background-color: rgba(0, 0, 0, 0.6); 
  color: white;
  font-size: 1.2em;
  border-radius: 10px;
  box-shadow: 0 0 10px black;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
}

#op2 {
  padding-bottom: 2.5em;
  line-height: 2.2;
}

#op3 {
  padding-bottom: 2.5em;
  line-height: 1.8;
}

#op4 {
  padding-bottom: 2em;
  line-height: 1.6;
  font-size: 1em;
}

#btnNextPassage {
  position: fixed;
  bottom: 20px;
  right: 20px;
  padding: 10px 20px;
  background-color: rgba(0, 0, 0, 0.5); 
  border-radius: 5px;
}

#prviOdabir {
  margin-top:80%;
}